version: 2.1

workflows:
  build_and_test:
    jobs:
      - build:
          name: build-dev
          context: dockerhub
          filters:
            branches:
              only: master
      - integration-test:
          name: dev-integration-tests
          context: dockerhub
          tag: $CIRCLE_SHA1
          requires:
            - build-dev
          filters:
            branches:
              only: master
  release:
    jobs:
      - publish:
          context: dockerhub
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - integration-test:
          context: dockerhub
          requires:
            - publish
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

jobs:
  build:
    docker:
      - image: marcosx/docker-builder:latest
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            hadolint Dockerfile
      - setup_remote_docker
      - run:
          name: Build local image (local/rails-alpine)
          command: |
            docker build . -t local/rails-alpine
      - run:
          name: Scan the local image with trivy
          command: |
            trivy --clear-cache --no-progress --severity HIGH,CRITICAL local/rails-alpine
      - run:
          name: Local tests
          command: |
            inspec exec test \
              -t docker://$(docker run -it --rm -d local/rails-alpine sh)
      - run:
          name: DevSec Tests
          command: |
            inspec exec --no-distinct-exit linux-baseline-2.3.0 cis-docker-benchmark-2.1.0 \
              -t docker://$(docker run -it --rm -d local/rails-alpine sh)
      - run:
          name: Publish dev version
          command: |
            docker tag local/rails-alpine marcosx/rails-alpine:$CIRCLE_SHA1
            docker login -u "${DOCKER_LOGIN}" -p "${DOCKER_PASSWORD}"
            docker push marcosx/rails-alpine:$CIRCLE_SHA1
  integration-test:
    docker:
      - image: marcosx/docker-builder:0.0.1
    parameters:
      tag:
        type: string
        default: $CIRCLE_TAG
        description: tag to be used by test image
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and validate sample image
          command: |
            sed "s/IMG_TAG/<< parameters.tag >>/g; s/IMG_NAME/marcosx\/rails-alpine/g" Dockerfile.test > Dockerfile.test.local
            docker build . -f Dockerfile.test.local -t local/test-image
            docker run --name test-image -p 3000:3000 --rm -d local/test-image
            sleep 7
            curl localhost:3000
            docker stop test-image

  publish:
    docker:
      - image: marcosx/docker-builder:0.0.1
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Publish tagged and latest version
          command: |
            docker pull marcosx/rails-alpine:$CIRCLE_SHA1
            docker tag marcosx/rails-alpine:$CIRCLE_SHA1 marcosx/rails-alpine:$CIRCLE_TAG
            docker tag marcosx/rails-alpine:$CIRCLE_SHA1 marcosx/rails-alpine:latest
            docker login -u "${DOCKER_LOGIN}" -p "${DOCKER_PASSWORD}"
            docker push marcosx/rails-alpine:$CIRCLE_TAG
            docker push marcosx/rails-alpine:latest

